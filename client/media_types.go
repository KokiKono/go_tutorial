// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "pei0804/goa-stater": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/KokiKono/go_tutorial/design
// --out=$(GOPATH)/src/github.com/KokiKono/go_tutorial
// --version=v1.3.0

package client

import (
	"github.com/goadesign/goa"
	"net/http"
)

// DecodeErrorResponse decodes the ErrorResponse instance encoded in resp body.
func (c *Client) DecodeErrorResponse(resp *http.Response) (*goa.ErrorResponse, error) {
	var decoded goa.ErrorResponse
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}

// example (default view)
//
// Identifier: application/vnd.messagetype+json; view=default
type Messagetype struct {
	// id
	ID int `form:"id" json:"id" xml:"id"`
	// message
	Message string `form:"message" json:"message" xml:"message"`
}

// Validate validates the Messagetype media type instance.
func (mt *Messagetype) Validate() (err error) {

	if mt.Message == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "message"))
	}
	return
}

// DecodeMessagetype decodes the Messagetype instance encoded in resp body.
func (c *Client) DecodeMessagetype(resp *http.Response) (*Messagetype, error) {
	var decoded Messagetype
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}
